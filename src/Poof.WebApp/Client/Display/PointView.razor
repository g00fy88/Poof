@using Yaapii.Atoms.Text

<div class="centerparent" style="height: 270px">
    <div class="horizontalCentered">
        <div class="pointFrame ttip">
            <span class="ttext">@PointTip()</span>
            <div class="pointBack horizontalCentered" style="border: solid 10px @PointColor1(); background-color:@PointColor2(); color: @PointColor1()">
                <span class="pointFront icon-tribe-icon-37"></span>
            </div>
        </div>
        <div class="pointText">
        @if (Points < 0)
        {
            <div class="pointSign">
                <span class="oi oi-minus"></span>
            </div>
        }
        @if (Points > 0)
        {
            <div class="pointSign">
                <span class="oi oi-plus"></span>
            </div>
        }
            <div class="pointScale ttip">
                <div class="scaleBack" style="background-color:@ScaleColor()"></div>
                @if (Points > 400)
                {
                    <img class="scaleFront" src="./images/Waage_M1.png" />
                }
                else if (Points < -400)
                {
                    <img class="scaleFront" src="./images/Waage_P1.png" />
                }
                else
                {
                    <img class="scaleFront" src="./images/Waage_0.png" />
                }
                <span class="ttext">@ScaleTip()</span>
            </div>
            <p>@Math.Abs(Points).ToString("0.0")</p>
        </div>
        <div class="activityFrame">
            <div class="activityProgress">
                <span style="width:@ActivityProgress.ToString("F0")%"></span>
            </div>
            <div class="activityLevel">
                <p>Stufe</p>
                <span>@ActivityLevel</span>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public double Points { get; set; }
    [Parameter]
    public int ActivityLevel { get; set; }
    [Parameter]
    public double ActivityProgress { get; set; }

    private string PointColor1()
    {
        return Points > 0 ? "#54ff9f" : Points < 0 ? "#9ae0fc" : "#faf1aa";
    }

    private string PointColor2()
    {
        return Points > 0 ? "#43cd80" : Points < 0 ? "#67c9f0" : "#e8d961";
    }

    private string PointTip()
    {
        var pointTip = "Ausgeglichen";
        if (Points < 0)
        {
            pointTip = "Du bist im Minus-Bereich. Gebe etwas, um Punkte zu erhalten und in den Plus-Bereich zu kommen";
        }
        if (Points > 0)
        {
            pointTip = "Du bist im Plus-Bereich. Gebe Punkte aus und nimm dir dafür etwas, um in den Minus-Bereich zu kommen";
        }
        return pointTip;
    }

    private string ScaleColor()
    {
        return Math.Abs(Points) > 400 ? "#ed6678" : "#aaa";
    }

    private string ScaleTip()
    {
        var scaleTip = "Dein Punktestand befindet sich in Balance";
        if (Math.Abs(Points) > 400)
        {
            scaleTip = "Dein Punktestand ist zu hoch! Dies kann einen negativen Einfluss auf deinen Activity-Score haben.";
        }
        return scaleTip;
    }
}
